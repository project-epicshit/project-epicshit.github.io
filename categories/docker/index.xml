<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on -:: Cloud is yours and all the new things ::-</title><link>https://project.epicshit.io/categories/docker/</link><description>Recent content in Docker on -:: Cloud is yours and all the new things ::-</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 25 Apr 2023 00:00:00 +0200</lastBuildDate><atom:link href="https://project.epicshit.io/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>NetApp Trident in the Edge</title><link>https://project.epicshit.io/blog/2023/04/25/netapptridentintheedge/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2023/04/25/netapptridentintheedge/</guid><description>﻿NetApp Trident for ARM is now available !</description></item><item><title>Monitoring of Kubernetes Cluster ...</title><link>https://project.epicshit.io/blog/2022/04/13/buildyourenv-monitoring/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2022/04/13/buildyourenv-monitoring/</guid><description>&amp;hellip; with NetApp Cloud Insights Monitoring Kubernetes Clusters. A must in the service world. Anyone who provides service platforms must be able to tell at any time which and how many resources the customer&amp;rsquo;s applications are consuming. Immediately everyone thinks of Prometheus or maybe Splunk. But the most common tool is Prometheus. Prometheus collects performance data of pods and services from the Kubernetes cluster and then displays it via Grafana. So why use a new or different tool?</description></item><item><title>Add Kubernetes Cluster to Astra Control</title><link>https://project.epicshit.io/blog/2022/04/03/buildyourenv-addbackup/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2022/04/03/buildyourenv-addbackup/</guid><description>Automated enabling backup In the first post, we wrote about the requirements for an optimized DevOps environment. In the second, we provisioned the Kubernetes cluster with NetApp storage.
As soon as applications run in the Kubernetes cluster and generate data, there is no getting around the topic of backup. Astra Control is used as the backup solution.
Astra Control is NetApp&amp;rsquo;s solution for Application-Aware Backup of Kubernetes apps. Astra Control backs up application metadata in addition to PVCs.</description></item><item><title>Build your DevOps Environment!</title><link>https://project.epicshit.io/blog/2022/03/21/buildyourenv/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2022/03/21/buildyourenv/</guid><description>Build your DevOps Environment! The LinkedIn post &amp;ldquo;NetApp in a Cloud DevOps Context&amp;rdquo; showed how an optimized Kubernetes environment can look in the cloud. This series of articles now show how to build such an environment in an automated way.
There will be four parts to this series.
Part 1: Planning Part 2: Setting up the required infrastructure Part 3: Activation of the backup Part 4: Monitoring and optimization of the environment The cloud providers Microsoft Azure and Google Cloud Platform are used to set up the test environments.</description></item><item><title>NetApp in a Cloud DevOps Context!</title><link>https://project.epicshit.io/blog/2022/02/08/netappclouddevopscontext/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2022/02/08/netappclouddevopscontext/</guid><description>﻿NetApp in a Cloud DevOps Context! Are you running a Kubernetes platform in the cloud based on cloud provider native services today? Then let me show you how NetApp can help to optimize this environment.
Each cloud provider uses its own storage products for its Kubernetes services, which are addressed via the CSI driver. In a NetApp optimized world, the &amp;ldquo;standard&amp;rdquo; driver will be replaced by Astra Trident. With Trident, it is now possible to use PVC on a cloud-optimized ONTAP: Cloud Volume Service, Azure NetApp Files, Cloud Volume ONTAP or FSx for NetApp ONTAP are the perfect solutions.</description></item><item><title>Installer Addon for NetApp Trident using kubectl - Update</title><link>https://project.epicshit.io/blog/2021/01/22/tridentautomatedinstall_update/</link><pubDate>Fri, 22 Jan 2021 06:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2021/01/22/tridentautomatedinstall_update/</guid><description>Trident Installer Addon Three month ago I published my first version of an automated NetApp Trident installer for Kubernetes cluster. In the last days I had some time to continue development on my installer. Time to change: my first version based on a bash script which runs in extra docker container. For running the script it was required to mount the kubeconfig file into the docker container.
Now the architecture of the installer changed to a single manifest which includes all required parts.</description></item><item><title>Automated install of NetApp Trident using kubectl</title><link>https://project.epicshit.io/blog/2020/09/10/tridentautomatedinstall/</link><pubDate>Thu, 10 Sep 2020 07:00:00 +0200</pubDate><guid>https://project.epicshit.io/blog/2020/09/10/tridentautomatedinstall/</guid><description>Who wasn‘t yet faced the challenge to install NetApp Trident on multiple kubernetes clusters? NetApp provides very good documentation on ReadTheDocs. But you must execute the instruction step by step.
In addition to this documentation, I would like to introduce a way to install trident automatically in any k8s cluster via kubectl.
The following yaml file can be used for this:
--- apiVersion: v1 kind: Pod metadata: name: k8s-trident-installer labels: app: trident-installer spec: containers: - name: installer image: fabianborn/k8s-trident-installer:latest ports: - containerPort: 19811 volumeMounts: - name: kconfig mountPath: &amp;#34;/config&amp;#34; subPath: kubeconfig env: - name: DEBUG value: &amp;#34;0&amp;#34; volumes: - name: kconfig configMap: name: trident-install-kubeconfig In preparation, the yaml file subPath: kubeconfig must be adapted to the original kubeconfig name.</description></item></channel></rss>